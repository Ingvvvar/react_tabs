{"version":3,"sources":["component/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","selectedTabId","selectTab","className","map","tab","id","title","type","classNames","active","onClick","find","item","content","App","state","selectedTab","changeTab","selected","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"2NAUaA,EAAkB,SAACC,GAAW,IAAD,EAChCC,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,cAAeC,EAAcH,EAAdG,UAE7B,OACE,oCACE,oBAAIC,UAAU,eAAd,SACGH,EAAKI,KACJ,SAAAC,GACE,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MAEZ,OACE,oBAAaJ,UAAU,WAAvB,SACE,wBACEK,KAAK,SACLL,UAAWM,IAAW,8BAA+B,CAAEC,OAAQT,IAAkBK,IACjFK,QAAS,WACHV,IAAkBK,GACpBJ,EAAUG,IALhB,SASGE,KAVID,QAiBjB,sCACGN,EAAKY,MAAK,SAAAC,GAAI,OAAIA,EAAKP,KAAOL,YADjC,aACG,EAA8Ca,cClCjDd,G,MAAc,CAClB,CAAEM,GAAI,QAASC,MAAO,QAASO,QAAS,eACxC,CAAER,GAAI,QAASC,MAAO,QAASO,QAAS,eACxC,CAAER,GAAI,QAASC,MAAO,QAASO,QAAS,iBAOpCC,E,4MACJC,MAAe,CACbC,YAAajB,EAAK,I,EAGpBkB,UAAY,SAACC,GACX,EAAKC,SAAS,CACZH,YAAaE,K,4CAIjB,WACE,IAAQF,EAAgBI,KAAKL,MAArBC,YACAV,EAAUU,EAAVV,MAER,OACE,sBAAKJ,UAAU,MAAf,UACE,uDAAwBI,KACxB,cAAC,EAAD,CACEP,KAAMA,EACNC,cAAegB,EAAYX,GAC3BJ,UAAWmB,KAAKH,mB,GArBRI,aA4BHP,ICxCfQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7589a13a.chunk.js","sourcesContent":["import { FC } from 'react';\nimport classNames from 'classnames';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  selectTab: (selected: Tab) => void;\n};\n\nexport const Tabs: FC<Props> = (props) => {\n  const { tabs, selectedTabId, selectTab } = props;\n\n  return (\n    <section>\n      <ul className=\"nav nav-tabs\">\n        {tabs.map(\n          tab => {\n            const { id, title } = tab;\n\n            return (\n              <li key={id} className=\"nav-item\">\n                <button\n                  type=\"button\"\n                  className={classNames('btn btn-outline-dark btn-lg', { active: selectedTabId === id })}\n                  onClick={() => {\n                    if (selectedTabId !== id) {\n                      selectTab(tab);\n                    }\n                  }}\n                >\n                  {title}\n                </button>\n              </li>\n            );\n          },\n        )}\n      </ul>\n      <p>\n        {tabs.find(item => item.id === selectedTabId)?.content}\n      </p>\n    </section>\n  );\n};\n","import { Component } from 'react';\nimport { Tabs } from './component';\n\nimport './App.scss';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype State = {\n  selectedTab: Tab;\n};\n\nclass App extends Component<{}, State> {\n  state: State = {\n    selectedTab: tabs[0],\n  };\n\n  changeTab = (selected: Tab) => {\n    this.setState({\n      selectedTab: selected,\n    });\n  };\n\n  render() {\n    const { selectedTab } = this.state;\n    const { title } = selectedTab;\n\n    return (\n      <div className=\"App\">\n        <h1>{`Selected tab is ${title}`}</h1>\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTab.id}\n          selectTab={this.changeTab}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}